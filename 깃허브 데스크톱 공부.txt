깃 git 은 프로그램 이름
github
gitlab
얘네는 온라인호스팅업체
github: private 협업은 유료고 혼자 private는 공짜
ms가 인수하였음

git을 편하게 쓸수있는 github desktop 프로그램이 있음
깃터미널 프로그램은 깃허브데스크탑(gui프로그램)이 익숙해지면 익히자
깃 크라켄이라는 프로그램도 있나보다

remote(온라인저장소 깃허브등) <-> rocal(내컴퓨터)
구분할때 쓰는 말이 remote

fork는 깃헙에만 있는 기능

깃허브에서 code 누르고 open in github desktop
clone repo 가 되고 로컬에 똑같은 저장소가 생긴다

저장소이름 바꾸고싶을땐 걍 로컬삭제해버린다음 깃허브에서 바꾸고
다시 clone 하면된다

로컬에 있는 내거랑 깃허브코드랑 다를때,

깃허브에 업로드 = commit(코멘트남기기) push
커밋하면 스테이지에 올라가고 여러개의 커밋이 스테이지에 동시에 올라갈수있다
푸시 누르면 스테이지에 있던 커밋이 한꺼번에 업로드됨.

pull이랑 fetch는 다운로드인데 혼자서 개발할때는 쓸일이 거의 없다
협업시 철수가 온라인저장소(레포) 바꾸면 내거랑 다르니까
로컬에 다운받는게 pull/fetch

pull fetch 차이점
fetch 자동 merge 안해줌 직접확인한후 merge 해야함
pull 자동 merge


풀리퀘스트 = 수정권한 없는 남의 프로젝트에 기여했을때 코드에 합쳐주세요 하고 요청하는거(*아직 잘모름)

gitattribute 파일
gitignore 파일 - 온라인관리 안할게 뭐뭐인지 등 설정파일
깃 기능을 위한 내부 파일
윈도우탐색기에선 가려져서 보인다

changes에서 초록+는 바뀐내용 빨간-는 안바뀌었음을 의미
비교대상은 remote

커밋해서 로컬 스테이지에 올려놓고 푸시 바로안하고 깃허브데스크탑 종료해도
스테이지엔 남아있어서 나중에 한번에 푸시 가능

#history창

    어떤 커밋이 푸시 안됐는지는 history에 화살표로 표시

    이미 push된 커밋 우클릭중(위화살표가 없다)
        revert changes in commit 해당지점으로 롤백(실제코드가 undo)
    
    push안된 커밋 우클릭(위화살표 있음)
        
        Amend commit 커밋을 취소하고 취소했다는 커밋도 남긴다
        undo commit 걍 커밋을 취소
        가장 최근 commit만 됨

        커밋 여러번해서 바꾼거도 없는데 여러개되서 빡치면
        history 합치고싶은거 다중블록선택, squash 하면 된다.

        브랜치 만들기 여기서 가능


    


2021 7/4
    깃허브데스크탑으로 컨플릭트를 해결해야 푸시가된다


*깃허브 데스크톱에서는 방법이 두개인데
    깃허브데스크톱에서 레포지토리를 만든후 퍼블리시하는 방법
        그러면 .gitattributes 라는 파일을 자동으로 만들고(수정파일한파일과 커밋이 없으면 publish가 안된다.)
        Initial commit이라는 커밋을 자동으로 생성한 다음 퍼블리시까지 해준다 존나 편한거

    반대로 깃허브 사이트에서 레포지토리를 만든 후 그걸 깃허브 데스크톱으로 클론해오면
    수정된 파일이 하나도 없고 커밋도 없기 때문에 퍼블리시가 안된다
    그래서 텍스트파일이던 뭐던 하나 만들고 커밋까지 해준다음에 퍼블리시가 된다