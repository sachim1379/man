
불리언값 True False 는 키워드이며, 무조건 대문자시작.

== != 비교연산자 True와 False를 반환

is 연산자와 is not 연산자
논리연산자와 달리 객체가 같은지 비교
메모리주소까지 비교해서 완전 같은 객체인지 비교. 값이 같아도 다른 객체면 False 반환

정수를 is 로 비교할때와 ==로 비교할때의 차이
int형과 float 형이여도 ==은 같다고 판단, is는 같은 정수여야 같다고 판단


파이썬의 and 연산자는 진짜 키워드로 and임(...)
True and True >> 이렇게 사용한다.
or도 마찬가지. 키워드임
not ''

not True and False or not False
논리연산자가 같이 있으면 not and or 순서로 판단함. 근데 이런코드는 쓰지말자

비교연산자 == != 과 논리연산자 not and or 이 함께 있으면 비교연산자를 먼저 연산

불리언으로 만들기 함수 bool(1)
숫자는 0을 제외하면 True
문자열은 빈문자열 '',""을 제외하면 모두 True

단락 평가(short-circuit-evaluation)
첫번째 연산만으로 결과가 확실하면 걍 두번째값은 연산하지않음
예를 들어 and연산인데 앞이 거짓이면 뒤에는 보지도 않고 False 반환

*좆같은 포인트
True and 'Python' 은 'Python'이 나옴
아니 빈문자열이 아닌 문자열은 True래매요
단락평가때문에 마지막으로 평가한 항목이 그대로 출력됨.



