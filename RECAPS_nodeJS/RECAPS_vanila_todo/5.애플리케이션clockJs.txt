

app.js를 여러개로 분할해서 작은 js파일 여러개로 코드를 만들면
보기도 편하고 관리하기도 쉽다.

이런방식을 devide and conquer 라고한다.

vscode의 플러그인인 Material Icon Theme 설치하면 css js 폴더를 구분하기 쉽고 예쁘게 바꿔준다.
설치후 상단메뉴바-파일(F)-기본설정-파일아이콘테마-Material Icon Theme 선택


같은아이디라도, 태그가 다르면 구분해서 지정할수있다.
h1#clock
아이디 clock중 h1인것만 선택

setInterval(sayHello,5000);
5초 마다 앞의 함수를 반복해서 실행한다.

setTimeout(sayHello,5000);
5초 기다렸다가 앞의 함수를 실행한다(반복x)



Date object 시간을 저장하고있는 자바스크립트객체
const date = new Date();

getClock();
setInterval(getClock,1000);
인터벌함수는 먼저기다리고 다음에 실행하기때문에,
사이트가 로드되자마자 바로실행하고싶으면 다음과 같이 하면된다.
밀리세컨드라서 1000이면 1초이다

00
01
이렇게 두자리로 표시하고싶을때
"1".padStart(2,"0")
>>두자리료 표시할거고, 자리가 비어있으면 0을 채워넣어라
프로그래밍에서, 둘러싸고있는것을 패딩이라고한다
padEnd는 뒤를 채운다

"hello".padStart(20,"x");
>>"xxxxxxxxxxhello"
이렇게 사용할수도있다.

문자열에만 쓸수있으므로, 숫자에 쓸때는 문자열로 바꿔준다.

new Date().getHours()
>>19 이건 숫자다
String(new Date().getHours())
>>"19" 이건 문자열이다.

vscode)알트를 누르고 클릭을 하면 다중캐럿선택을 할수있다

백틱과 달러대괄호를 이용해 문자열을 표기하는것은
es6부터 추가된것으로, 템플릿 리터럴이라고 부른다.

배열에다가 객체를 집어넣을수있다

객체 -> CSS와 JS 둘다 JSON문법을 사용함 (JSON=자바스크립트식 객체표기법)
객체를 만드는 방법에는 객체생성자(new이용)랑 객체 리터럴이 있는데
이건 객체리터럴이라는 방식이다
const plut = {a1:1,a2:2}
객체변수는 프로퍼티라고 한다
중괄호 프로퍼티 콜론 쉼표 
중프콜쉼
순서로 입력한다.

class User {} 로 클래스를 생성,
user1 = new User() 로 객체 생성

이벤트를 받았을때 수행하는 기능을 EventHandler 또는 Callback 이라고한다.

span 과 div 태그
아무 기능이 없는 그냥 구분나누기용 태그. 주로
id나 클래스를 적어서 css로 디자인을 바꾸는데 쓰인다.
div는 자동줄바꿈을 해주고, span은 줄바꿈을 안한다.

const quote = document.querySelector("#quote span:first-child");
쿼리셀렉터에서 스페이스를 하면 바로 안껍데기 차일드를 찾고,
콜론을 이용해서 몇번째를 지정할지 정해줄수있다.

랜덤을 구현하기 위해
Math.random()을 사용한다.
0.234234이런게 나온다
0이상 1미만을 반환 -MDN

Math.round() 반올림
Math.ceil() 올림 천장
Math.floor() 내림 바닥

Math.floor(Math.random()*10)
1에서부터 10까지 출력

console.log(quote[Math.floor(Math.random()*10)]);
배열인덱스로 함수의 출력값을 넣을수있다.

바뀔수도있는 숫자를 그냥 리터럴로 코드에 쳐넣어버려서 나중에 변수를 바꿀때
골치아파지는걸 하드코딩이라고한다.

Array.length 하면 길이가 나오는데, 여기서 길이는 요소의 개수이다.
즉
[1,2,3,4,5].length 
(이렇게 쓸수도있다 물론)
는 5를 반환한다

bgImage.src = `img/${chosenImage}`;
백틱문자열로 경로를 문자열형식으로 입력할수있다

const bgImage = document.createElement("img");
document.createElement(태그이름)은
태그를 아얘 새로 창조한다.

document.body.appendChild(bgImage);
document는 html자체를 객체로 보는 자바스크립트에서의 html텍스트 전체이다.
html의 모든 태그는 document객체 다음 dot이고
body태그또한 객체이므로 객체메소드인 appendChild()를 통해서
body태그 안쪽에 차일드로 bgImage를 넣을수있다.

const toDoInput = toDoForm.querySelector("input");
=
const toDoInput = document.querySelector("#todo-form input");
쿼리셀렉터로 변수와 연결한 객체의 자식으로 다시 쿼리셀렉터로 접근할수있다.

console.log(newTodo, toDoInput.value);
console로그는 여러개의 값을 받을수있다.